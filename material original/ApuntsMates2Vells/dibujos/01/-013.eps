%!PS-Adobe-3.0
%%DocumentNeededResources: font Helvetica
%%+ font Helvetica-Bold
%%+ font Helvetica-Oblique
%%+ font Helvetica-BoldOblique
%%+ font Symbol
%%DocumentMedia: special 720 360 0 () ()
%%Title: R Graphics Output
%%Creator: R Software
%%Pages: (atend)
%%BoundingBox: 0 0 720 360
%%EndComments
%%BeginProlog
/bp  { gs gs } def
% begin .ps.prolog
/gs  { gsave } def
/gr  { grestore } def
/ep  { showpage gr gr } def
/m   { moveto } def
/l  { rlineto } def
/np  { newpath } def
/cp  { closepath } def
/f   { fill } def
/o   { stroke } def
/c   { newpath 0 360 arc } def
/r   { 4 2 roll moveto 1 copy 3 -1 roll exch 0 exch rlineto 0 rlineto -1 mul 0 exch rlineto closepath } def
/p1  { stroke } def
/p2  { gsave bg fill grestore newpath } def
/p3  { gsave bg fill grestore stroke } def
/p6  { gsave bg eofill grestore newpath } def
/p7  { gsave bg eofill grestore stroke } def
/t   { 5 -2 roll moveto gsave rotate
       1 index stringwidth pop
       mul neg 0 rmoveto show grestore } def
/ta  { 4 -2 roll moveto gsave rotate show } def
/tb  { 2 -1 roll 0 rmoveto show } def
/cl  { grestore gsave newpath 3 index 3 index moveto 1 index
       4 -1 roll lineto  exch 1 index lineto lineto
       closepath clip newpath } def
/rgb { setrgbcolor } def
/s   { scalefont setfont } def
% end   .ps.prolog
%%IncludeResource: font Helvetica
/Helvetica findfont
dup length dict begin
  {1 index /FID ne {def} {pop pop} ifelse} forall
  /Encoding ISOLatin1Encoding def
  currentdict
  end
/Font1 exch definefont pop
%%IncludeResource: font Helvetica-Bold
/Helvetica-Bold findfont
dup length dict begin
  {1 index /FID ne {def} {pop pop} ifelse} forall
  /Encoding ISOLatin1Encoding def
  currentdict
  end
/Font2 exch definefont pop
%%IncludeResource: font Helvetica-Oblique
/Helvetica-Oblique findfont
dup length dict begin
  {1 index /FID ne {def} {pop pop} ifelse} forall
  /Encoding ISOLatin1Encoding def
  currentdict
  end
/Font3 exch definefont pop
%%IncludeResource: font Helvetica-BoldOblique
/Helvetica-BoldOblique findfont
dup length dict begin
  {1 index /FID ne {def} {pop pop} ifelse} forall
  /Encoding ISOLatin1Encoding def
  currentdict
  end
/Font4 exch definefont pop
%%IncludeResource: font Symbol
/Symbol findfont
dup length dict begin
  {1 index /FID ne {def} {pop pop} ifelse} forall
  currentdict
  end
/Font5 exch definefont pop
%%EndProlog
%%Page: 1 1
bp
0.00 0.00 720.00 360.00 cl
/Font2 findfont 14 s
0 setgray
374.40 325.45 (Histograma y polígono de frecuencias absolutas) .5 0 t
/Font1 findfont 12 s
260.02 4.32 (Este histogr) 0 ta
-0.120 (ama es la salida estándar de R) tb gr
348.39 18.72 (Inter) 0 ta
0.360 (v) tb
-0.300 (alos) tb gr
12.96 187.20 (Frecuencias absolutas n[i]) .5 90 t
0.00 0.00 720.00 360.00 cl
0 setgray
0.75 setlinewidth
[] 0 setdash
1 setlinecap
1 setlinejoin
10.00 setmiterlimit
np
62.93 73.44 m
584.00 0 l
o
np
62.93 73.44 m
0 -7.20 l
o
np
257.60 73.44 m
0 -7.20 l
o
np
452.27 73.44 m
0 -7.20 l
o
np
646.93 73.44 m
0 -7.20 l
o
/Font1 findfont 12 s
62.93 47.52 (5) .5 0 t
257.60 47.52 (10) .5 0 t
452.27 47.52 (15) .5 0 t
646.93 47.52 (20) .5 0 t
np
59.04 81.87 m
0 185.88 l
o
np
59.04 81.87 m
-7.20 0 l
o
np
59.04 143.83 m
-7.20 0 l
o
np
59.04 205.79 m
-7.20 0 l
o
np
59.04 267.75 m
-7.20 0 l
o
41.76 81.87 (0) .5 90 t
41.76 143.83 (5) .5 90 t
41.76 205.79 (10) .5 90 t
41.76 267.75 (15) .5 90 t
59.04 73.44 689.76 300.96 cl
0 setgray
0.75 setlinewidth
[] 0 setdash
1 setlinecap
1 setlinejoin
10.00 setmiterlimit
82.40 81.87 116.80 136.31 r p1
199.20 81.87 116.80 136.31 r p1
316.00 81.87 116.80 210.67 r p1
432.80 81.87 116.80 111.53 r p1
549.60 81.87 116.80 24.78 r p1
1 0 0 rgb
np
82.40 81.87 m
58.40 136.31 l
116.80 0 l
116.80 74.35 l
116.80 -99.13 l
116.80 -86.75 l
58.40 -24.78 l
o
ep
%%Trailer
%%Pages: 1
%%EOF
